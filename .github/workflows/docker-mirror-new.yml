name: Docker镜像同步(新增)
permissions: write-all        

on:
  workflow_dispatch:
    inputs:
      dockerhub_image:
        description: '输入 DockerHub 镜像名称 (例如: nginx 或 organization/image)'
        required: true
        type: string
      tag:
        description: '输入镜像标签 (例如: latest)'
        required: true
        type: string
      ghcr_image:
        description: '推送到GHCR.IO的镜像名称'
        required: true
        default: 'myimage'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ inputs.ghcr_image }}

jobs:
  mirror:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update images list
        run: |
          # 如果文件不存在，创建基础结构
          if [ ! -f docker-images.json ]; then
            echo '{"images":{}}' > docker-images.json
          fi
          
          # 更新 JSON 文件，只添加当前输入的标签
          jq --arg img "${{ inputs.dockerhub_image }}" \
             --arg tag "${{ inputs.tag }}" \
             '.images[$img] = if has("images") and has("images"[$img]) 
                             then ((.images[$img] + [$tag]) | unique)
                             else [$tag]
                             end' \
             docker-images.json > temp.json && mv temp.json docker-images.json

          # 提交更新
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add docker-images.json
          git commit -m "Update docker images list: Added ${{ inputs.dockerhub_image }}:${{ inputs.tag }}" || echo "No changes to commit"
          git push || echo "No changes to push"

      - name: 登录到GitHub容器注册表
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}  
          password: ${{ secrets.GITHUB_TOKEN }} 
      
      - name: 从DockerHub拉取Docker镜像
        run: |
          docker pull ${{ inputs.dockerhub_image }}:${{ inputs.tag }}
      
      - name: 设置小写的 GitHub 用户名
        run: echo "ACTOR_LOWER=$(echo '${{ github.actor }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      
      - name: 为GitHub容器注册表标记Docker镜像
        run: |
          docker tag ${{ inputs.dockerhub_image }}:${{ inputs.tag }} ${{ env.REGISTRY }}/${{ env.ACTOR_LOWER }}/${{ env.IMAGE_NAME }}:${{ inputs.tag }}
      
      - name: 将Docker镜像推送到GitHub容器注册表
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.ACTOR_LOWER }}/${{ env.IMAGE_NAME }}:${{ inputs.tag }}
