name: Docker镜像同步(更新)
permissions: write-all

on:
  workflow_dispatch:
    inputs:
      dockerhub_image:
        description: '选择要更新的镜像'
        required: true
        type: choice
        options: ${{ fromJson(github.event.repository.default_branch != '' && contains(readFile('docker-images.json'), '{') && fromJson(readFile('docker-images.json')).images ? toJson(keys(fromJson(readFile('docker-images.json')).images)) : '["请先运行新增workflow添加镜像"]') }}
      tag:
        description: '选择镜像标签'
        required: true
        type: choice
        options: ${{ fromJson(github.event.repository.default_branch != '' && contains(readFile('docker-images.json'), '{') && fromJson(readFile('docker-images.json')).images[inputs.dockerhub_image] ? toJson(fromJson(readFile('docker-images.json')).images[inputs.dockerhub_image]) : '["latest"]') }}
      ghcr_image:
        description: '推送到GHCR.IO的镜像名称'
        required: true
        default: 'myimage'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ inputs.ghcr_image }}

jobs:
  mirror:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: 读取镜像信息
        id: read_images
        run: |
          IMAGES=$(cat docker-images.json | jq -r '.images | keys[]')
          echo "Available images: $IMAGES"

      - name: 登录到GitHub容器注册表
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 从DockerHub拉取Docker镜像
        run: |
          docker pull ${{ inputs.dockerhub_image }}:${{ inputs.tag }}

      - name: 设置小写的 GitHub 用户名
        run: echo "ACTOR_LOWER=$(echo '${{ github.actor }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: 为GitHub容器注册表标记Docker镜像
        run: |
          docker tag ${{ inputs.dockerhub_image }}:${{ inputs.tag }} ${{ env.REGISTRY }}/${{ env.ACTOR_LOWER }}/${{ env.IMAGE_NAME }}:${{ inputs.tag }}

      - name: 将Docker镜像推送到GitHub容器注册表
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.ACTOR_LOWER }}/${{ env.IMAGE_NAME }}:${{ inputs.tag }}
